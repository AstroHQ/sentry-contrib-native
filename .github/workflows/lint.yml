name: lint

on:
  push:
    branches-ignore:
      - gh-pages
  pull_request:
    branches-ignore:
      - gh-pages
  schedule:
    - cron: 0 0 * * *

jobs:
  clippy:
    if: github.event_name != 'schedule'

    strategy:
      fail-fast: false
      matrix:
        rust:
          - { channel: stable, feature: "" }
          - { channel: beta, feature: "" }
          - { channel: nightly, feature: --features nightly }

    runs-on: ubuntu-latest

    steps:
      - name: Install Rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust.channel }}
          components: clippy
      - name: Cache rustc version
        uses: actions/cache@v2
        with:
          path: ~/rustc-version.txt
          key: lint-${{ matrix.rust.channel }}-version
      - name: Save new rustc version
        run: rustc -V > ~/rustc-version.txt

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install Curl
        run: |
          sudo apt update
          sudo apt install libcurl4-openssl-dev
      - name: Get sentry-native commit
        id: sentry_native
        run:
          echo "::set-output name=version::$(git submodule status | cut -d ' '
          -f 2)"
      - name: Cache sentry-native
        uses: actions/cache@v2
        with:
          path: ~/sentry-native
          key:
            ${{ runner.os }}-${{ steps.sentry_native.outputs.version }}-${{
            matrix.feature.transport-default }}-${{
            hashFiles('sentry-contrib-native-sys/build.rs') }}
      - name: Set SENTRY_NATIVE_INSTALL
        run: echo >>$GITHUB_ENV SENTRY_NATIVE_INSTALL=$HOME/sentry-native

      - name: Clippy
        run:
          cargo clippy -v --all-targets --features transport-custom ${{
          matrix.rust.feature }} -- -D warnings
      - name: Documentation
        env:
          RUSTDOCFLAGS: -D warnings
        run:
          cargo -v doc --no-deps --document-private-items --workspace --features
          transport-custom ${{ matrix.rust.feature }}

      - name: Cache outcome
        if: always()
        uses: actions/cache@v2
        with:
          path: ~/outcome.txt
          key: lint-${{ matrix.rust.channel }}-outcome
      - name: Save outcome
        run: echo ${{ success() }} > ~/outcome.txt

  schedule-clippy:
    if: github.event_name == 'schedule'

    strategy:
      fail-fast: false
      matrix:
        rust:
          - { channel: stable, feature: "" }
          - { channel: beta, feature: "" }
          - { channel: nightly, feature: --features nightly }
        branch:
          - master
          - release

    runs-on: ubuntu-latest

    steps:
      - name: Install Rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust.channel }}
          components: clippy
      - name: Cache rustc version
        uses: actions/cache@v2
        with:
          path: ~/rustc-version.txt
          key: lint-${{ matrix.rust.channel }}-version
      - name: Compare rustc versions
        id: rustc_version
        continue-on-error: true
        run: "! diff -u ~/rustc-version.txt <(rustc -V)"
      - name: Save new rustc version
        run: rustc -V > ~/rustc-version.txt

      - name: Cache outcome
        uses: actions/cache@v2
        with:
          path: ~/outcome.txt
          key: lint-${{ matrix.rust.channel }}-outcome
      - name: Emit last outcome if rustc version is the same
        if: steps.rustc_version.outcome == 'failure'
        run: diff -u ~/outcome.txt <(echo "true")

      - name: Checkout
        if: steps.rustc_version.outcome == 'success'
        uses: actions/checkout@v2
        with:
          ref: ${{ matrix.branch }}
          submodules: recursive
      - name: Install Curl
        if: steps.rustc_version.outcome == 'success'
        run: |
          sudo apt update
          sudo apt install libcurl4-openssl-dev
      - name: Get sentry-native commit
        id: sentry_native
        if: steps.rustc_version.outcome == 'success'
        run:
          echo "::set-output name=version::$(git submodule status | cut -d ' '
          -f 2)"
      - name: Cache sentry-native
        if: steps.rustc_version.outcome == 'success'
        uses: actions/cache@v2
        with:
          path: ~/sentry-native
          key:
            ${{ runner.os }}-${{ steps.sentry_native.outputs.version }}-${{
            matrix.feature.transport-default }}-${{
            hashFiles('sentry-contrib-native-sys/build.rs') }}
      - name: Set SENTRY_NATIVE_INSTALL
        if: steps.rustc_version.outcome == 'success'
        run: echo >>$GITHUB_ENV SENTRY_NATIVE_INSTALL=$HOME/sentry-native

      - name: Clippy
        if: steps.rustc_version.outcome == 'success'
        run:
          cargo clippy -v --all-targets --features transport-custom ${{
          matrix.rust.feature }} -- -D warnings
      - name: Documentation
        if: steps.rustc_version.outcome == 'success'
        env:
          RUSTDOCFLAGS: -D warnings
        run:
          cargo -v doc --no-deps --document-private-items --workspace --features
          transport-custom ${{ matrix.rust.feature }}

      - name: Save outcome
        if: always() && steps.rustc_version.outcome == 'success'
        run: echo ${{ success() }} > ~/outcome.txt
